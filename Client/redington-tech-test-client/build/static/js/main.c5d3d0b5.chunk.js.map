{"version":3,"sources":["app-config.js","services/calculation-service.js","components/app-header.js","components/result-box.js","components/form-errors.js","components/form-notes.js","App.js","index.js"],"names":["CONFIG","CalculationService","calculateProbability","calcType","A","B","url","fetch","method","headers","body","JSON","stringify","then","response","json","responseJson","catch","error","console","AppHeader","className","ResultBox","this","props","value","React","Component","FormErrors","formErrors","Object","keys","map","fieldName","i","length","key","FormNotes","App","handleSubmission","event","preventDefault","service","state","setState","calcResult","handleChange","nam","target","name","val","validateField","aIsValid","bIsValid","formValid","fieldValidationErrors","message","probabilityIsValid","validateForm","onSubmit","htmlFor","type","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5d3d0b5.chunk.js","sourcesContent":["// By default I am pointing this at the dev instance\r\n// To change environment simply comment out which path you want.\r\n// If I had more time I'd have this read from environment config but this will do for the tech test\r\n\r\n// local\r\n// const api_root = 'http://localhost:5000/api/probability-calculations';\r\n\r\n// dev\r\nconst api_root = 'https://aw-redington.azurewebsites.net/api/probability-calculations';\r\n\r\nexport const CONFIG = {\r\n    API_ROOT: api_root\r\n};","import { CONFIG } from '../app-config';\r\n\r\nexport class CalculationService {\r\n  calculateProbability = (calcType, A, B) => {\r\n\r\n    const url = calcType === \"combine\" ? `${CONFIG.API_ROOT}/combine` : `${CONFIG.API_ROOT}/either`;\r\n\r\n    return fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        \"A\": A,\r\n        \"B\": B\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        return response.json()\r\n      })\r\n      .then((responseJson) => {\r\n        return responseJson;\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport function AppHeader() {\r\n    return (<div className=\"pb-2 mt-4 mb-2 border-bottom\">\r\n        <h1>Redington Tech Test</h1>\r\n    </div>);\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport class ResultBox extends React.Component {\r\n    render() {\r\n        return (<div className=\"card .bg-info\">\r\n            <div className=\"card-header\">\r\n                Result\r\n        </div>\r\n            <div className=\"card-body\">\r\n                {this.props.value}\r\n            </div>\r\n        </div>);\r\n    };\r\n}","import React from 'react';\r\n\r\nexport const FormErrors = ({ formErrors }) =>\r\n    <div>\r\n        {Object.keys(formErrors).map((fieldName, i) => {\r\n            if (formErrors[fieldName].length > 0) {\r\n                return (\r\n                    <div key={i} className='alert alert-danger'>\r\n                        <p key={i}>{fieldName} {formErrors[fieldName]}</p>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return '';\r\n            }\r\n        })}\r\n    </div>","import React from 'react';\r\n\r\nexport function FormNotes() {\r\n    return (<div>\r\n        <p>\r\n            Input two probabilites A and B (note: must be between 0 and 1), select a calculation type and hit Submit.\r\n        </p>\r\n        <p>\r\n            <strong>Combine</strong> calculates the probability of both A and B i.e. P(A)P(B)\r\n        </p>\r\n        <p>\r\n            <strong>Either</strong> calculates the probability of either A and B i.e. P(A) + P(B) - P(A)P(B)\r\n        </p>\r\n    </div>);\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport { CalculationService } from './services/calculation-service';\r\nimport { AppHeader } from './components/app-header';\r\nimport { ResultBox } from './components/result-box';\r\nimport { FormErrors } from './components/form-errors';\r\nimport { FormNotes } from './components/form-notes';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.service = new CalculationService();\r\n    this.state = {\r\n      A: 0,\r\n      B: 0,\r\n      calcResult: 0,\r\n      calcType: \"combine\",\r\n      formErrors: { A: '', B: '' },\r\n      aIsValid: true,\r\n      bIsValid: true,\r\n      formValid: true\r\n    };\r\n  }\r\n\r\n  handleSubmission = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.service\r\n      .calculateProbability(this.state.calcType, this.state.A, this.state.B)\r\n      .then(response => {\r\n        this.setState({\r\n          calcResult: response\r\n        });\r\n      })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n\r\n    this.setState({ [nam]: val }, () => { this.validateField(nam, val) });\r\n  }\r\n\r\n  probabilityIsValid(value) {\r\n    return value >= 0 && value <= 1;\r\n  }\r\n\r\n  validateField(fieldName, value) {\r\n    let fieldValidationErrors = this.state.formErrors;\r\n    let aIsValid = this.state.aIsValid;\r\n    let bIsValid = this.state.bIsValid;\r\n\r\n    const message = \" => must be between 0 and 1\";\r\n\r\n    switch (fieldName) {\r\n      case 'A':\r\n        aIsValid = this.probabilityIsValid(value);\r\n        fieldValidationErrors.A = aIsValid ? '' : message;\r\n        break;\r\n      case 'B':\r\n        bIsValid = this.probabilityIsValid(value);\r\n        fieldValidationErrors.B = bIsValid ? '' : message;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({\r\n      formErrors: fieldValidationErrors,\r\n      aIsValid: aIsValid,\r\n      bIsValid: bIsValid\r\n    }, this.validateForm);\r\n  }\r\n\r\n  validateForm() {\r\n    this.setState({ formValid: this.state.aIsValid && this.state.bIsValid });\r\n  }\r\n\r\n  errorClass(error) {\r\n    return (error.length === 0 ? '' : 'alert aelrt-danger');\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"container\">\r\n\r\n      <AppHeader></AppHeader>\r\n\r\n      <div className=\"card card-primary\">\r\n        <div className=\"card-header\">\r\n          <h3>\r\n            Probability Calculator\r\n          </h3>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-xs-12\">\r\n              <FormErrors formErrors={this.state.formErrors} />\r\n              <form onSubmit={this.handleSubmission}>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor='A'>Input A</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"A\"\r\n                    className=\"form-control\"\r\n                    value={this.state.A}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor='B'>Input B</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"B\"\r\n                    className=\"form-control\"\r\n                    value={this.state.B}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"calcType\">Calculation Type</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"calcType\"\r\n                    value={this.state.calcType}\r\n                    onChange={this.handleChange}>\r\n                    <option value=\"combine\">Combine</option>\r\n                    <option value=\"either\">Either</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button\r\n                    type='submit'\r\n                    className=\"btn btn-primary\"\r\n                    disabled={!this.state.formValid}>\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </form>\r\n              <FormNotes></FormNotes>\r\n            </div>\r\n            <div className=\"col-md-6 col-xs-12\">\r\n              <ResultBox value={this.state.calcResult}></ResultBox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  };\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}